# Powered by Application Builder: https://github.com/golift/application-builder
jobs:
  include:
  - os: osx
    osx_image: xcode12
    language: go
    go: 1.16.x
  - os: linux
    dist: bionic
    services: docker
    language: go
    go: 1.16.x
git:
  depth: false
addons:
  homebrew:
    packages:
    #- rpm
    #- gnu-tar
    - upx
  apt:
    packages:
    - ruby-dev
    - rpm
    - build-essential
    - git
    - libgnome-keyring-dev
    - fakeroot
    - zip
    - debsigs
#    - gnupg
    - expect
    - upx
install:
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin latest
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm install 2.6.0; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm 2.6.0 do gem install --no-document fpm; fi
before_script:
  # Create your own deploy key, tar it, and encrypt the file to make this work. Optionally add a bitly_token file to the archive.
  - openssl aes-256-cbc -K $encrypted_e5c248149abf_key -iv $encrypted_e5c248149abf_iv -in .secret_files.tar.enc -out .secret_files.tar -d
  - tar -xf .secret_files.tar
  - rm -f gpg.signing.key .secret_files.tar
  - source settings.sh
script:
  # Test Go and Docker.
  - make test
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then make docker; fi
  # Test built docker image.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker run $BINARY -v 2>&1 | grep -Eq "^$BINARY, version $VERSION"; fi
  # Build everything
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm 2.6.0 do make release; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ];   then make dmg; fi
after_success:
  # Display Release Folder
  - ls -l release/
  # Setup the ssh client so we can clone and push to the homebrew formula repo.
  # You must put github_deploy_file into .secret_files.tar.enc
  # This is an ssh key added to your homebrew forumla repo.
  - |
    mkdir -p $HOME/.ssh
    declare -r SSH_FILE="$(mktemp -u $HOME/.ssh/XXXXX)"
    echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> $HOME/.ssh/config
    [ ! -f github_deploy_key ] || (mv github_deploy_key $SSH_FILE \
      && chmod 600 "$SSH_FILE" \
      && printf "%s\n" \
        "Host github.com" \
        "  IdentityFile $SSH_FILE" \
        "  StrictHostKeyChecking no" \
        "  LogLevel ERROR" >> $HOME/.ssh/config)
deploy:
  - provider: releases
    overwrite: true
    skip_cleanup: true
    cleanup: false
    file_glob: true
    token:
      # to get a secure api key, run: travis setup releases
      # make a copy of this file first because that command will change it.
      # or: make a new key manually at https://github.com/settings/tokens/new
      # then: echo <NEW_KEY_FROM_GH> | travis encrypt
      secure: GAU7o2KZuhl9pfUcZD/Nz1/67ridwVBXH/L4vtHGtD+xso+28t6M123RMFLVVXtH6x5b8pS+x7wqJp2cL319hhklMRfa6JOx3H9tG0CrChzvokYAeM91qPznIs/QyWKCK3Jgf0ABzqHJmCeQCbMdV9ydDSY/HYCBin+Ny14cFcPawXFu/85wpnmqc68BG0Gji12nn8fA4iESDDUKsKC7qOFwYe2cN4p48eHF+g+LRDQv6+aKoGDHP1JFW4TR/VdwzJ0uK+lZ7JSZXS92fl6rjIBUjFLrrZrN2oqIM1DBGEcP0K4x1u4Ia1yRx1Af8MBpZpH3+bbcc93NLFtEphHZzsEYySao7PfhIECcSLv4LoXuZXGGNzEKWxYmV8wiule1UaTPt62hV2KBB4rj99h0lH5BQ/eq8SZ1py/1HJyi1ps0ouxvktVMc0iRrSK8Gf3qscYsq1KGku2VNDF6btIP20b86DGsKQjIdi58Wn8Zyo1s07SpnHCpE+F5xM6hl180vtqnNqaCKcFtvi12jCSWKc5uDYnx/sCRPQsxcS/dFp4SmUhGmfYbB5/h0uJWxJpOlubUlExoN218ovRgbXFlGp8mkAlKv3IlWNYqV2o0h3SxaCA7i0Bo+pemQRjsXU7zgjBgVoLozrxPYF31fwo81i8cBJ7jW72qmlFxSXAPICE=
    file: release/*
    on:
      tags: true
  - provider: script
    script: bash scripts/formula-deploy.sh
    on:
      tags: true
      condition: "$TRAVIS_OS_NAME = osx"
